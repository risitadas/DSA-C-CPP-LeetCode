class Solution {
public:
    int maxDistance(vector<int>& position, int m) 
    {

        ranges::sort(position);
     //   int n = position.size();
        int left=1;
        int right = (position.back() - position[0])/(m - 1);

        while(left <= right)
        {
            int mid = (right+left)/2;
            int temp = distance(position, mid);

            if(temp >= m)
            {
                left = mid+1;

            }
            else
            {
                right = mid-1;

            }

        }

        return right;


        
    }

    int distance(vector<int>& position, int mid)
    {

        int count=1, end = position[0];

        for(int i=1; i<position.size(); i++)
        {
            if(position[i] - end >= mid)
            {
                count++;
                end = position[i];

            }
        }

        return count;

    }

};
